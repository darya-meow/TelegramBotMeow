from aiogram import Router, html, F
from aiogram.types import Message, BufferedInputFile
from aiogram.filters import CommandStart
from filters.filter import PlaylistIdentifierFilter
from service.youtubeapiclientv3 import YouTubeAPIClientV3
from service.telegram_db_excel_service import send_excel_file
from service.telegram_log_input import get_log_file_as_bytesio
from models.methods import DataBase
from lexicon.lexicon import LEXICON_RU
from config.config import bot
from utils.logger import logger


handler_router = Router()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Router –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
service = YouTubeAPIClientV3()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ YouTubeAPIClientV3 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API YouTube
database = DataBase()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@handler_router.message(CommandStart())  
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ.

    Returns:
        None
    """
    await message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await message.answer(
        text=LEXICON_RU['cmd_start'].format(message.from_user.username)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
    )
    logger.info(f'–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã /start


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–æ–º–∞–Ω–¥–æ–π /help
@handler_router.message(F.text == '/help')  
async def cmd_help(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ.

    Returns:
        None
    """
    await message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /help
    await message.answer(
        text=LEXICON_RU['cmd_help']  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—â–µ–π —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    )
    logger.info(f'–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /help –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã /help


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º /help_playlist
@handler_router.message(F.text == '/help_playlist')
async def cmd_help_playlist(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help_playlist.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ.

    Returns:
        None
    """
    await message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /help_playlist
    await message.answer(
        text=LEXICON_RU['cmd_help_playlist']  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ø–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞–º
    )
    logger.info(f'–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /help_playlist –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã /help_playlist


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Ñ–∏–ª—å—Ç—Ä PlaylistIdentifierFilter
@handler_router.message(PlaylistIdentifierFilter())  
async def cmd_playlist(message: Message):    
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ YouTube.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º.

    Returns:
        None
    """
    try:
        playlist_info: dict = service.playlist.get_info(message.text)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        return
    
    try:
        entities = message.entities or []  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        for item in entities:
            if item.type in playlist_info.keys():
                playlist_info[item.type] = item.extract_from(message.text)  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Å—É—â–Ω–æ—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.reply(
            f'üìπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ\n'
            f'üîí –¢–∏–ø —Ä–µ—Å—É—Ä—Å–∞: {html.quote(str(playlist_info["kind"]))}\n'
            f'üîë –ú–µ—Ö–∞–Ω–∏–∑–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è: {html.quote(str(playlist_info["etag"]))}\n'
            f'üÜî –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {html.quote(str(playlist_info["id_playlist"]))}\n'
            f'üïí –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {html.quote(str(playlist_info["publishedAt"]))}\n'
            f'üë§ –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞: {html.quote(str(playlist_info["channelId"]))}\n'
            f'üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: {html.quote(str(playlist_info["title"]))}\n'
            f'üñºÔ∏è URL –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {html.quote(str(playlist_info["thumbnails_url"]))}\n'
            f'üìè –®–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {html.quote(str(playlist_info["thumbnails_width"]))}\n'
            f'üìê –í—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {html.quote(str(playlist_info["thumbnails_height"]))}\n'
            f'üîè –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: {html.quote(str(playlist_info["privacyStatus"]))}\n'
            f'üëÄ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ: {html.quote(str(playlist_info["itemCount"]))}\n'
            f'‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç–∞: {html.quote(str(playlist_info["duration"]))}\n'
        )
        logger.info(f'–î–∞–Ω–Ω—ã–µ –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ: {str(playlist_info["id_playlist"])} –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ
        database.save_playlist_info(playlist_info)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    except Exception as e:
        logger.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        return


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º /help_export
@handler_router.message(F.text == '/help_export')  
async def cmd_help_export(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help_export.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ.

    Returns:
        None
    """
    await message.delete()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π /help_export
    await message.answer(
        text=LEXICON_RU['cmd_help_export']  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ø–æ —ç–∫—Å–ø–æ—Ä—Ç—É –¥–∞–Ω–Ω—ã—Ö
    )
    logger.info(f'–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /help_export –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã /help_export
    

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –∫–æ–º–∞–Ω–¥—É /export
@handler_router.message(F.text == '/export')
async def cmd_export(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /export, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–∞–π–ª Excel —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ.

    Returns:
        None
    """
    excel_file = send_excel_file()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ Excel —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await bot.send_document(message.from_user.id, document=BufferedInputFile(excel_file.read(), 'db_data.xlsx'))  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    logger.info(f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö /export –¥–ª—è –ø–æ–ª—å–æ–≤–∞—Ç–µ–ª—è: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –∫–æ–º–∞–Ω–¥—É /export_log
@handler_router.message(F.text == '/export_log')   
async def cmd_export(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /export_–¥—â–ø, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–∞–π–ª bot.log —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ª–æ–≥–∞—Ö —Å–∏—Å—Ç–µ–º—ã.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ.

    Returns:
        None
    """
    log_file = get_log_file_as_bytesio()
    await bot.send_document(message.from_user.id, document=BufferedInputFile(log_file.read(), 'bot.log'))  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    logger.info(f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤—ã–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤ /export_log –¥–ª—è –ø–æ–ª—å–æ–≤–∞—Ç–µ–ª—è: {message.from_user.full_name} | {message.from_user.id}')  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö